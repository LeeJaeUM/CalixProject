using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace Shot
{
    public class CircleShotGotoShot : MonoBehaviour
    {
        // 총알을 생성 후 Target에게 날아갈 변수
        public Transform Target;
        public Transform start;
        // 발사될 총알 오브젝트
        public GameObject Bullet;

        private void Start()
        {
            // 1초마다 Shot() 함수를 호출합니다.
            InvokeRepeating("Shot", 0f, 1f);
        }

        private void Shot()
        {
            // Target 방향으로 발사될 오브젝트 수록
            List<Transform> bullets = new List<Transform>();

            for (int i = 0; i < 360; i += 13)
            {
                // 총알 생성
                GameObject temp = Instantiate(Bullet);

                // 2초 후 삭제
                Destroy(temp, 2f);

                // 총알 생성 위치를 현재 오브젝트의 위치로 한다.
                Vector3 spawnPosition = start.position + Quaternion.Euler(0, 0, i) * (Vector3.right * 5); // 예시로 2 단위만큼 떨어진 위치에 생성
                temp.transform.position = spawnPosition;

                // ?초 후에 Target에게 날아갈 오브젝트 수록
                bullets.Add(temp.transform);

                // Yaw 회전을 적용
                temp.transform.rotation = Quaternion.Euler(0, i, 0);
            }

            // 총알을 Target 방향으로 이동시킨다.
            StartCoroutine(BulletToTarget(bullets));
        }

        private IEnumerator BulletToTarget(IList<Transform> objects)
        {
            // 0.5초 후에 시작
            yield return new WaitForSeconds(0.5f);

            for (int i = 0; i < objects.Count; i++)
            {
                // 현재 총알의 위치에서 플레이어의 위치의 벡터값을 뻴셈하여 방향을 구함
                Vector3 targetDirection = Target.transform.position - objects[i].position;

                // 방향을 바라보도록 회전
                Quaternion rotation = Quaternion.LookRotation(targetDirection);
                objects[i].rotation = rotation;
            }

            // 데이터 해제
            objects.Clear();
        }
    }
}
